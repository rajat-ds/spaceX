{"version":3,"sources":["logo.svg","components/search/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","year","Search","props","selectYear","id","e","state","yearSelected","document","getElementById","style","backgroundColor","setState","changeURL","selectLaunch","launchSelected","launchSucess","selectLanding","landingSelected","landSuccess","loaded","games","fetch","then","res","json","active","catch","console","log","this","Row","Col","padding","md","sm","marginLeft","map","y","className","onClick","data","Card","Body","width","src","links","mission_patch_small","mission_name","flight_number","launch_year","launch_success","launch_failure_details","type","color","height","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.03df2b51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ReactLoading from \"react-loading\";\r\nimport './index.css';\r\nconst year = [2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020]\r\nconst URL = \"https://api.spacexdata.com/v3/launches?limit=100\"\r\nconst THEME_SECONDARY = \"#f77f00\";\r\n\r\n\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n       \r\n            loaded: false,\r\n            games:''\r\n        }\r\n     \r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://api.spacexdata.com/v3/launches?limit=100\")\r\n            .then(res => res.json())\r\n            .then((games) => {\r\n                this.setState({ games, loaded: true, active: 1 });\r\n            }).catch(e => console.log(e))\r\n    }\r\n    selectYear=(id,e)=>{\r\n        if(this.state.yearSelected)\r\n                 document.getElementById(this.state.yearSelected).style.backgroundColor = \"lightgreen\";\r\n        document.getElementById(id).style.backgroundColor = \"lightblue\";\r\n        this.setState({\r\n            yearSelected:id\r\n        })\r\n        this.changeURL()\r\n    } \r\n    selectLaunch=(id,e)=>{\r\n        if(this.state.launchSelected)\r\n                 document.getElementById(this.state.launchSelected).style.backgroundColor = \"lightgreen\";\r\n        document.getElementById(id).style.backgroundColor = \"lightblue\";\r\n        this.setState({\r\n            launchSelected:id,\r\n            launchSucess:e\r\n        })\r\n        this.changeURL()\r\n    }\r\n    selectLanding=(id,e)=>{\r\n        if(this.state.landingSelected)\r\n                 document.getElementById(this.state.landingSelected).style.backgroundColor = \"lightgreen\";\r\n        document.getElementById(id).style.backgroundColor = \"lightblue\";\r\n        this.setState({\r\n            landingSelected:id,\r\n            landSuccess:e\r\n        })\r\n          this.changeURL()\r\n    }\r\n\r\n    changeURL=()=>{\r\n        if(this.state.yearSelected && this.state.landingSelected && this.state.launchSelected){\r\n            // this.setState({loaded:false})\r\n            // console.log(\"url\",\"https://api.spacexdata.com/v3/launches?limit=100&amp;launch_success=\"+this.state.launchSucess+\"&amp;land_success=\"+this.state.landSuccess+\"&amp;launch_year=\"+this.state.yearSelected)\r\n            // fetch(\"https://api.spacexdata.com/v3/launches?limit=100&amp;launch_success=\"+this.state.launchSucess+\"&amp;land_success=\"+this.state.landSuccess+\"&amp;launch_year=\"+this.state.yearSelected)\r\n            // .then(res => res.json())\r\n            // .then((games) => {\r\n            //     console.log(\"res1\",games)\r\n            //     this.setState({ games, loaded: true, active: 1 });\r\n            // }).catch(e => console.log(e))\r\n        }else if(this.state.yearSelected && this.state.landingSelected ){\r\n\r\n        }else if(this.state.landingSelected && this.state.launchSelected){\r\n\r\n        }else if(this.state.yearSelected && this.state.launchSelected){\r\n\r\n        }else if(this.state.yearSelected){\r\n\r\n        }else if(this.state.launchSelected){\r\n\r\n        }else if(this.state.landingSelected){\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n               {this.state.loaded?     <Row style={{backgroundColor:\"aliceblue\"}} >\r\n            <Col style={{padding: \"2%\" , backgroundColor:\"white\"}} md={3} sm={6}>\r\n               <div><strong>\r\n                   Filters\r\n                   </strong>\r\n                   <br/>\r\n                   <span style={{marginLeft: \"35%\"}} >Launch Year</span> \r\n                   <hr></hr>\r\n                   <Row>\r\n                       { year.map((y)=>\r\n                          <Col md={6} sm={6} >\r\n                              <div id={y} className=\"year\" onClick={(e) => this.selectYear(y, e)}>\r\n                              {y} \r\n                              </div>\r\n                            \r\n                          </Col>\r\n                       )\r\n\r\n                       }\r\n                   </Row>\r\n                   <span style={{marginLeft: \"35%\"}} >Sucessful Launch</span> \r\n                   <hr></hr>\r\n                   <Row>\r\n                         <Col md={6} sm={6}>\r\n                              <div id=\"lT\" className=\"year\" onClick={(e) => this.selectLaunch(\"lT\",\"true\", e)}>\r\n                              true\r\n                              </div>\r\n                            \r\n                          </Col>\r\n                          <Col md={6} sm={6} >\r\n                              <div className=\"year\" id=\"lF\" onClick={(e) => this.selectLaunch(\"lF\",\"false\", e)} >\r\n                              False\r\n                              </div>\r\n                            \r\n                          </Col>\r\n                   </Row>\r\n                   <span style={{marginLeft: \"35%\"}} >Sucessful Landing</span> \r\n                   <hr></hr>\r\n                   <Row>\r\n                         <Col md={6} sm={6}>\r\n                              <div id=\"landT\" className=\"year\" onClick={(e) => this.selectLanding(\"landT\",\"true\", e)}>\r\n                              true\r\n                              </div>\r\n                            \r\n                          </Col>\r\n                          <Col md={6} sm={6}>\r\n                              <div  id=\"landF\" className=\"year\" onClick={(e) => this.selectLanding(\"landF\",\"false\", e)}>\r\n                              False\r\n                              </div>\r\n                            \r\n                          </Col>\r\n                   </Row>\r\n\r\n               </div>\r\n            </Col>\r\n\r\n             <Col md={9}sm={12}>\r\n                 <Row>  \r\n                     {this.state.games.map((data)=>\r\n                          <Col md={3} sm={12}>\r\n                          <Card style={{ backgroundColor: \"white\", }}  >\r\n                          <Card.Body>\r\n                              <Row>\r\n                              \r\n                                      <img style={{ width: \"100%\" }} src={data.links.mission_patch_small} />\r\n                               \r\n                              \r\n                              </Row>\r\n                              <Row>\r\n                                   <p>{data.mission_name + \"#\" + data.flight_number}</p>\r\n                              </Row>\r\n                              <Row>\r\n                     <p><strong>Launch Year :</strong> {data.launch_year}</p>\r\n                              </Row>\r\n                              <Row>\r\n                     <p><strong>Sucessful Launch :</strong>{data.launch_success?\"launch Sucess\":\"false\"}</p>\r\n                              </Row>\r\n                              <Row>\r\n                     <p><strong>Sucessful Landing</strong>{data.launch_failure_details?\"false\":\"landing successFul\"}</p>\r\n                              </Row>\r\n                          </Card.Body>\r\n                          \r\n                      </Card>\r\n                 </Col>\r\n                     \r\n                     )}\r\n                      \r\n                       \r\n                 </Row>\r\n            \r\n          </Col>\r\n\r\n         \r\n\r\n          </Row>\r\n          :    <ReactLoading type=\"spin\" color={THEME_SECONDARY} height={'10%'} width={'10%'} />}  \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Search;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Search from './components/search'\nconst URL = \"https://api.spacexdata.com/v3/launches?limit=100\"\nconst THEME_SECONDARY = \"#f77f00\";\n\nfunction App() {\n  return (\n    <div>\n    <div className=\"App\" style={{ color: THEME_SECONDARY  }}>\n      <header>\n        <right>\n        <h1>SpaceX Launch Program</h1>\n        </right>\n      </header>\n     \n    </div>\n     <Search/>\n    \n     </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}